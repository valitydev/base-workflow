name: Maven Deploy Package

on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version'
        required: false
        default: "15"
        type: string
      java-distribution:
        description: 'Java distribution'
        required: false
        default: "adopt"
        type: string
    secrets:
      server-username:
        required: true
      server-password:
        required: true
      deploy-secret-key:
        required: true
      deploy-secret-key-password:
        required: true
      mm-webhook-url:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Deploy package
        uses: valitydev/action-deploy-jdk-package@v1.0.14
        with:
          server-username: ${{ secrets.server-username }}
          server-password: ${{ secrets.server-password }}
          deploy-secret-key: ${{ secrets.deploy-secret-key }}
          deploy-secret-key-password: ${{ secrets.deploy-secret-key-password }}

  test-coverage:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'

      - name: Maven Verify
        run: mvn --batch-mode clean verify

      - name: Upload code coverage
        uses: codecov/codecov-action@v1

  check-secret:
    runs-on: ubuntu-latest
    outputs:
      mm-secret: ${{ steps.my-key.outputs.defined }}
    steps:
      - id: mm-secret
        if: "${{ env.MM-SECRET != '' }}"
        run: echo "::set-output name=defined::true"
        env:
          MM-SECRET: ${{ secrets.mm-webhook-url }}

  notify:
    runs-on: ubuntu-20.04
    needs: [build-and-deploy, check-secret]
    if: needs.check-secret.outputs.mm-secret == 'true'
    steps:
      - name: Mattermost Notification
        run: echo notify-test